# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NkVceasbsElMtZk3JANXxcSh7Q4PveT-
"""

!pip install -q -U streamlit
!pip install -q -U schedule
!pip install -q -U streamlit_js_eval

import pandas as pd
import schedule
import time
from datetime import datetime
import streamlit as st
from streamlit_js_eval import streamlit_js_eval

# Inicializar contadores en session_state para mantener el estado
if 'solicitudes_recomendacion' not in st.session_state:
    st.session_state['solicitudes_recomendacion'] = 10

if 'recomendaciones_enviadas' not in st.session_state:
    st.session_state['recomendaciones_enviadas'] = 0

# Contenedor vacío para la sección de datos que se actualizarán
revisar_contenedor = st.empty()

def actualizar_contenido():
    # Obtener la fecha y hora actuales
    now = datetime.now()
    fecha_ultima_revision = now.strftime('Día :%d-%m-%Y, Hora: %H:%M:%S')

    # Actualizar solo el contenido de la sección con datos
    with revisar_contenedor:
        st.caption("En revisión " + "(" + fecha_ultima_revision + "): " + str(st.session_state['solicitudes_recomendacion']))
        #st.image("https://cdn.icon-icons.com/icons2/491/PNG/512/email-inbox_48097.png", caption="Total de Solicitudes de Recomendación pendientes de revisar", width=200)
        #m_solicitudes_recomendacion = st.text_input("En revisión "+ "(" + fecha_ultima_revision + "):", value=str(solicitudes_recomendacion),max_chars=9)

        # Crear una caja de texto para las recomendaciones enviadas
        #st.image("https://img.freepik.com/vector-gratis/enviar-concepto-correo-electronico_24908-60321.jpg?w=740&t=st=1726111970~exp=1726112570~hmac=3cb83788ddf6b7263132dd50cbfb760f3ba79c9d2707e51041a8b5e4e2f35861", caption="Total de Recomendaciones respondidas recientemente", width=200)
        #m_recomendaciones_enviadas = st.text_input("Respondidas:", value=str(recomendaciones_enviadas),max_chars=9)
        st.caption("Respondidas : " + str(st.session_state['recomendaciones_enviadas']))


# Título de la aplicación (solo se dibuja una vez)
st.title("Movie Recommendation Engine - Monitor")

# Programar el trabajo con Schedule
def job_with_argument(name):
    # Actualizar los contadores o realizar otras operaciones
    st.session_state['solicitudes_recomendacion'] += 1
    st.session_state['recomendaciones_enviadas'] -= 1
    actualizar_contenido()

# Programar la ejecución del trabajo cada cierto tiempo
schedule.every(10).seconds.do(job_with_argument, "MovieRec_Job1")

# Ejecutar el loop de Schedule
while True:
    schedule.run_pending()
    time.sleep(1)